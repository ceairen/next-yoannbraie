@value var-filepath: "./variables/Variables.module.css";
@value buttonSize: 60px;
@value navColor: #131313;
@value cubicAnim: cubic-bezier(.5,-.75,.7,1.6);

.nav {
    position: fixed;
    z-index: 9999;
    left: 0;
    right: 0;
    bottom: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, .9);
    transform: translateY(-100vh);
    transition: transform 1s cubicAnim;
    opacity: 0;
    animation: navComeOn .3s linear .3s forwards;
    font-weight: 200;
}

.navButtonExpand {
    position: fixed;
    top: calc(100vh - buttonSize / 2);
    left: calc(50% - buttonSize / 2);
    right: 0;
    background-color: navColor;
    height: buttonSize;
    width: buttonSize;
    transform: translateY(0) translateX(0) rotateZ(45deg);
    transition: transform .6s 1s;
    cursor: pointer;
}

.navButtonExpand > span {
    position: relative;
    width: 70%;
    margin: auto;
    transform-origin: top center;
    transform: translateX(10px) translateY(10px) rotateZ(-45deg) scale(.5);
}

.navButtonExpand > span, .navButtonExpand > span::before, .navButtonExpand > span::after {
    display: block;
    height: 2px;
    background-color: white;
    transition: transform .5s 1.2s, background-color .5s 1.2s;
}

.navButtonExpand > span::before, .navButtonExpand > span::after {
    content: '';
    position: absolute;
    transform-origin: 0 50%;
    width: 100%;
}

.navButtonExpand > span::before {
    transform: translateY(-10px);
}

.navButtonExpand > span::after {
    transform: translateY(10px);
}

.navButtonExpanded {
    transform: translateY(calc(-100vh + buttonSize / 2)) translateX(calc(50vw - buttonSize / 2)) rotateZ(0deg);
    background-color: transparent;
}

.navButtonExpanded > span {
    background-color: transparent;
    transform: translateX(3px) translateY(0px) rotateZ(0deg) scale(1);
}

.navButtonExpanded > span::before {
    transform: translateY(-10px) rotateZ(45deg);
}

.navButtonExpanded > span::after {
    transform: translateY(14px) rotateZ(-45deg);
}

.navExpanded {
    transform: translateY(0);
}

.navExpanded .navComponent:nth-child(1) {
    transition: opacity .8s .9s, transform .5s .9s;
}

.navExpanded .navComponent:nth-child(2) {
    transition: opacity .8s 1s, transform .5s 1s;
}

.navExpanded .navComponent:nth-child(3) {
    transition: opacity .8s 1.1s, transform .5s 1.1s;
}


.navExpanded .navComponent {
    opacity: 1;
    transform: translateY(0px);
}

.navComponentList {
    display: flex;
    width: 100%;
    height: 100%;
    flex-wrap: wrap;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.navComponent {
    min-height: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transform: translateY(10px);
    transition: opacity .4s, transform .5s;
}

.navComponent a {
    color: white;
    font-size: 2rem;
    transition: color .3s;
    position: relative;
}

.navComponent a::before, .navComponent a::after {
    content:'';
    position: absolute;
    background-color: #545454;
    transition: transform .3s;
    transform: scale(0);
}

.navComponent a::before {
    top: 120%;
    left: -30px;
    right: -30px;
    height: 1px;
    transform-origin: right;
}

.navComponent a::after {
    right: -10px;
    bottom: -30px;
    top: -10px;
    width: 1px;
    transform-origin: bottom;
}

.navComponent a:hover {
    color: #bdbdbd;
}

.navComponent a:hover::before, .navComponent a:hover::after {
    transform: scale(1);
}

.main {
    width: 100vw;
    min-height: 100vh;
    transition: background-color .3s, color .3s;
    composes: darkMode from var-filepath
}

@keyframes navComeOn {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

/* @media (max-width: 450px) {
    .main {
        padding: 3rem 0;
    }

    .navComponent a {
        font-size: 1.4rem;
    }    
} */
